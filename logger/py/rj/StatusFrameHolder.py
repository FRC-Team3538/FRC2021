# automatically generated by the FlatBuffers compiler, do not modify

# namespace: rj

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StatusFrameHolder(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStatusFrameHolder(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StatusFrameHolder()
        x.Init(buf, n + offset)
        return x

    # StatusFrameHolder
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StatusFrameHolder
    def UnixTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # StatusFrameHolder
    def MonotonicTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # StatusFrameHolder
    def StatusFrameType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # StatusFrameHolder
    def StatusFrame(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def StatusFrameHolderStart(builder): builder.StartObject(4)
def StatusFrameHolderAddUnixTime(builder, unixTime): builder.PrependFloat64Slot(0, unixTime, 0.0)
def StatusFrameHolderAddMonotonicTime(builder, monotonicTime): builder.PrependFloat64Slot(1, monotonicTime, 0.0)
def StatusFrameHolderAddStatusFrameType(builder, statusFrameType): builder.PrependUint8Slot(2, statusFrameType, 0)
def StatusFrameHolderAddStatusFrame(builder, statusFrame): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(statusFrame), 0)
def StatusFrameHolderEnd(builder): return builder.EndObject()
